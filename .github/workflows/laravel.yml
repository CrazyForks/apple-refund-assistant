name: apple-refund-assistant-ci

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
      - 'latest'

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker test image
      run: docker build --build-arg BUILD_MODE=test -t apple-refund-assistant-test .
    
    - name: Create coverage directory
      run: mkdir -p coverage
    
    - name: Start test container
      run: |
        docker run -d \
          --name test-container \
          -e DB_CONNECTION=sqlite \
          -e DB_DATABASE=database/database.sqlite \
          -e APP_ENV=testing \
          apple-refund-assistant-test
    
    - name: Setup test environment
      run: |
        echo "Setting up test environment..."
        docker exec test-container cp .env.example .env
        docker exec test-container composer install
        docker exec test-container php artisan key:generate
        docker exec test-container mkdir -p database
        docker exec test-container touch database/database.sqlite
    
    - name: Run tests with coverage
      run: |
        echo "Running tests with coverage..."
        docker exec test-container php artisan test --coverage --parallel --coverage-clover coverage.xml --log-junit tests-report.xml
    
    - name: Copy coverage files from container
      run: |
        docker cp test-container:/var/www/html/coverage.xml ./coverage.xml
        docker cp test-container:/var/www/html/tests-report.xml ./tests-report.xml
        echo "Coverage files copied successfully"  
    
    - name: Remove test container
      run: docker rm -f test-container
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish-docker-image:
    if: startsWith(github.ref, 'refs/tags/')
    needs: laravel-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v3
      with:
        subject-name: ghcr.io/${{ github.repository }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true